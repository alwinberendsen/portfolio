{"remainingRequest":"/Users/alwinberendsen/Projects/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alwinberendsen/Projects/portfolio/node_modules/vue-typed-js/src/components/VueTypedJs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alwinberendsen/Projects/portfolio/node_modules/vue-typed-js/src/components/VueTypedJs.vue","mtime":1553718079532},{"path":"/Users/alwinberendsen/Projects/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alwinberendsen/Projects/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alwinberendsen/Projects/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alwinberendsen/Projects/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport Typed from 'typed.js'\nimport { props, getEventHandlers } from '../config/typed-component.config'\n\nexport default {\n  name: 'vue-typed-js',\n  props,\n  data () {\n    return {\n      typedObj: null,\n    }\n  },\n  methods: {\n    throwError: function (message) {\n      throw new TypeError(message)\n    },\n    initTypedJS: function () {\n      const $typed = this.$refs.typedElement.querySelector('.typing')\n\n      if (this.$slots.default.length > 1) {\n        this.throwError(`Just one child element allowed inside <${this.$options.name}> component.`)\n      } else if (this.$slots.default.length === 1) {\n        let typedConfig = this.$props\n        typedConfig = getEventHandlers(this, typedConfig)\n        this.typedObj = new Typed($typed, typedConfig)\n      }\n    },\n  },\n  updated(){\n    this.initTypedJS()\n  },\n  mounted: function () {\n    this.initTypedJS()\n  },\n}\n",{"version":3,"sources":["VueTypedJs.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueTypedJs.vue","sourceRoot":"node_modules/vue-typed-js/src/components","sourcesContent":["<template>\n  <div class=\"typed-element\" ref=\"typedElement\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport Typed from 'typed.js'\nimport { props, getEventHandlers } from '../config/typed-component.config'\n\nexport default {\n  name: 'vue-typed-js',\n  props,\n  data () {\n    return {\n      typedObj: null,\n    }\n  },\n  methods: {\n    throwError: function (message) {\n      throw new TypeError(message)\n    },\n    initTypedJS: function () {\n      const $typed = this.$refs.typedElement.querySelector('.typing')\n\n      if (this.$slots.default.length > 1) {\n        this.throwError(`Just one child element allowed inside <${this.$options.name}> component.`)\n      } else if (this.$slots.default.length === 1) {\n        let typedConfig = this.$props\n        typedConfig = getEventHandlers(this, typedConfig)\n        this.typedObj = new Typed($typed, typedConfig)\n      }\n    },\n  },\n  updated(){\n    this.initTypedJS()\n  },\n  mounted: function () {\n    this.initTypedJS()\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.typed-element {\n  display: flex;\n  align-items: center;\n\n  .typed-cursor {\n    opacity: 1;\n    animation: typedjsBlink 0.7s infinite;\n  }\n}\n\n@keyframes typedjsBlink{\n  50% { opacity: 0.0; }\n}\n</style>\n"]}]}